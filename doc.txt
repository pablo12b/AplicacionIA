1. Ir al directorio del front
- Ejecutar cd frontend
- Ejecutar npm i
2. Como ahora vamos a dividir front y back necesito habilitar cors (Esto ya en el backporfavor)
- pip install flask-cors
pip install psycopg2-binary

3. Para instalar la base de datos ejecutar: 

INGRESAR LA TABLA DE PREDICCIONES:

CREATE TABLE predictions (
    id SERIAL PRIMARY KEY,              -- Identificador único
    image_url TEXT NOT NULL,            -- URL de la imagen
    predictions TEXT NOT NULL,          -- Predicciones en texto
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Fecha de predicción
    user_id INT NOT NULL,               -- Identificador del usuario asociado
	audio_url TEXT NOT NULL,            -- URL de la imagen
    CONSTRAINT fk_user_id
        FOREIGN KEY (user_id) REFERENCES users(id)
        ON DELETE CASCADE               -- Borra las predicciones si el usuario es eliminado
);


--UPDATE EN LA BASE DE DATOS--
Se añade a usuarios:
CREATE TABLE users (
    id SERIAL PRIMARY KEY,       -- Identificador único
    name VARCHAR(100) NOT NULL,  -- Nombre del usuario
    email VARCHAR(100) UNIQUE NOT NULL, -- Correo electrónico único
    password TEXT NOT NULL,      -- Contraseña en formato hash
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Fecha de creación
);

4. Se implementa encriptacion (hash y tal) para eso por fa instalen (si no lo tienen): pip install werkzeug

5. Modificacion en la tabla predictions: Agregamos la asociacion entre usuario y prediccion: ALTER TABLE predictions ADD COLUMN user_id INT REFERENCES users(id) ON DELETE CASCADE;

6. Modificacion en bd, se agrega el campo audio_url: ALTER TABLE predictions ADD COLUMN audio_url TEXT;

7. PARA USO DE LA API DE GOOGLE:
- pip install google-cloud-texttospeech

8. Sincronizar dependencias: pip install google-cloud-texttospeech protobuf==3.20.*

**ADICIONALES**

- ENTRAR A BD EN LINUX CON USUARIO POSTGRES: psql -U postgres -d mi_base -h localhost -p 5432

9. instalar
npm install jspdf
npm install jspdf-autotable